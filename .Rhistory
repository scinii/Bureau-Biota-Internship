plot(informed_rda,
scaling = 1,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 1"
)
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Genus')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_coord <- zoo_community[c('lat','lon')]
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
informed_rda = rda(zoo_spe.hel ~ pH + Conductivity, data=zoo_env.z)
summary(informed_rda)
anova.cca(informed_rda, step=9999)
plot(informed_rda,
scaling = 1,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 1"
)
spe.sc1 <-
scores(informed_rda,
choices = 1:2,
scaling = 1,
display = "sp"
)
plot(informed_rda,
scaling = 1,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 1"
)
spe.sc1 <-
scores(informed_rda,
choices = 1:2,
scaling = 1,
display = "sp"
)
arrows(0, 0,
spe.sc1[, 1] * 0.9,
spe.sc1[, 2] * 0.9,
length = 0,
lty = 1,
col = "red"
)
plot(informed_rda,
scaling = 1,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 1"
)
spe.sc1 <-
scores(informed_rda,
choices = 1:2,
scaling = 1,
display = "sp"
)
arrows(0, 0,
spe.sc1[, 1] * 0.9,
spe.sc1[, 2] * 0.9,
length = 0,
lty = 1,
col = "red"
)
plot(informed_rda,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 2"
)
spe.sc2 <-
scores(informed_rda,
choices = 1:2,
display = "sp"
)
arrows(0, 0,
spe.sc2[, 1] * 0.9,
spe.sc2[, 2] * 0.9,
length = 0,
lty = 1,
col = "red"
)
ordiplot(cristoph_rda, scaling = 1, type = "text", main = "Cristoph RDA - Scaling 1")
cristoph_rda = rda(zoo_spe.hel ~ pH + Conductivity + Temperature, data=zoo_env.z)
ordiplot(cristoph_rda, scaling = 1, type = "text", main = "Cristoph RDA - Scaling 1")
ordiplot(cristoph_rda, scaling = 2, type = "text", main = "Cristoph RDA - Scaling 2"
ordiplot(cristoph_rda, scaling = 2, type = "text", main = "Cristoph RDA - Scaling 2")
ordiplot(cristoph_rda, scaling = 2, type = "text", main = "Cristoph RDA - Scaling 2")
View(zoo_spe.hel)
anova.cca(cristoph_rda, step=9999)
informed_pca = rda(zoo_spe.hel)
informed_pca
informed_rda
informed_pca = rda(zoo_spe.hel)
pca12 <- scores(informed_pca, display = 'sites', choices = 1:2)
informed_rda_pca12 <- rda (zoo_spe.hel ~ pca12)
RsquareAdj(informed_rda_pca12)
informed_rda
informed_pca
pca12 <- scores(informed_pca, display = 'sites', choices = 1:2)
informed_rda_pca12 <- rda (zoo_spe.hel ~ pca12)
informed_rda_pca12
cor.test (~ pH + Conductivity, data = zoo_env.z)
informed_partial_rda = rda(zoo_spe.hel ~ pH + Conductivity +
Condition(Depth + alt),
data = zoo_env.z)
informed_partial_rda
informed_rda
anova.cca(informed_partial_rda)
anova.cca(informed_partial_rda, by ="term")
ordiplot(informed_partial_rda, scaling = 2)
ordiplot(informed_partial_rda, scaling = 1)
anova.cca(informed_partial_rda, by ="axis")
View(zoo_env.z)
informed_partial_rda = rda(zoo_spe.hel ~ pH + Conductivity +
Condition(Depth + alt),
data = zoo_env)
informed_partial_rda
anova.cca(informed_partial_rda)
anova.cca(informed_partial_rda, by ="term")
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Genus')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_coord <- zoo_community[c('lat','lon')]
zoo_spat <- zoo_community[c('alt','Depth')]
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
zoo_spat.z <- decostand(zoo_spat, method = "standardize")
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
varpart(zoo_spe.hel, zoo_env.z, zoo_spat.z)
plot(varpart(zoo_spe.hel, zoo_env.z, zoo_spat.z),
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_varpart =varpart(zoo_spe.hel, zoo_env.z, zoo_spat.z)
plot(informed_varpart)
plot(spe.part.all,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles # only show 2 digits
cex = 1.5)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_varpart
informed_varpart =varpart(zoo_spe.hel, zoo_env, zoo_spat)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
data("mite.pcnm")
View(mite.pcnm)
informed_varpart =varpart(zoo_spe.hel, zoo_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
View(zoo_env.z)
informed_env.z = zoo_env.z[c("pH","Conductivity")]
View(informed_varpart)
zoo_env.z
zoo_env.z[c("pH","Conductivity")]
View(informed_env.z)
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_varpart
zoo_spat <- zoo_community[c('alt')]
zoo_spat.z <- decostand(zoo_spat, method = "standardize")
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
zoo_coord <- zoo_community[c('lat','lon')]
zoo_spat <- zoo_community[c('alt', 'Depth')]
zoo_spat.z <- decostand(zoo_spat, method = "standardize")
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Genus')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_coord <- zoo_community[c('lat','lon')]
zoo_spat <- zoo_community[c('alt', 'Depth')]
zoo_spat.z <- decostand(zoo_spat, method = "standardize")
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5, show.values = TRUE)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_varpart
informed_varpart =varpart(zoo_spe.hel, zoo_env.zz, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_varpart =varpart(zoo_spe.hel, zoo_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
pcnm(zoo_coord)
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Genus')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_spat <- zoo_community[c('lat','lon','alt', 'Depth')]
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
corrplot(cor(zoo_env.z), is.corr = FALSE, method = 'color',
col = COL1('Oranges'), cl.pos = 'r', addgrid.col = 'white', addCoef.col = 'black', type= "lower", diag = FALSE)
#FULL
full_rda = rda(zoo_spe.hel ~ pH + Conductivity + Temperature + DO, data=zoo_env.z)
summary(full_rda)
anova.cca(full_rda, step=9999)
cristoph_rda = rda(zoo_spe.hel ~ pH + Conductivity + Temperature, data=zoo_env.z)
summary(cristoph_rda)
anova.cca(cristoph_rda, step=9999)
anova.cca(cristoph_rda, step=9999,by="term", )
anova.cca(cristoph_rda, step=9999,by="axis")
ordiplot(cristoph_rda, scaling = 1, type = "text", main = "Cristoph RDA - Scaling 1")
ordiplot(cristoph_rda, scaling = 2, type = "text", main = "Cristoph RDA - Scaling 2")
sel_cristoph.fs = forward.sel(Y = zoo_spe.hel, X = zoo_env.z , adjR2thresh =  RsquareAdj(full_rda)$r.squared, nperm = 49999, alpha = 0.1)
informed_rda = rda(zoo_spe.hel ~ pH + Conductivity, data=zoo_env.z)
summary(informed_rda) # 31.88%
anova.cca(informed_rda, step=9999)
triplot = function(){
plot(informed_rda,
scaling = 1,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 1"
)
spe.sc1 <-
scores(informed_rda,
choices = 1:2,
scaling = 1,
display = "sp"
)
arrows(0, 0,
spe.sc1[, 1] * 0.9,
spe.sc1[, 2] * 0.9,
length = 0,
lty = 1,
col = "red"
)
plot(informed_rda,
display = c("sp", "lc", "cn"),
main = "Informed RDA - Scaling 2"
)
spe.sc2 <-
scores(informed_rda,
choices = 1:2,
display = "sp"
)
arrows(0, 0,
spe.sc2[, 1] * 0.9,
spe.sc2[, 2] * 0.9,
length = 0,
lty = 1,
col = "red"
)
}
informed_pca = rda(zoo_spe.hel) # 57.35%
cor.test (~ pH + Conductivity, data = zoo_env.z)
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
zoo_spat.z <- decostand(zoo_spat, method = "standardize")
informed_env.z = zoo_env.z[c("pH","Conductivity")]
informed_varpart =varpart(zoo_spe.hel, informed_env.z, zoo_spat.z)
plot(informed_varpart,
Xnames = c("Env", "Spat"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Genus')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_spat <- zoo_community[c('lat','lon','alt', 'Depth')]
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
dist(zoo_spat)
pcnm(dist(zoo_spat))
rda(zoo_spe.hel ~., data= pcnm(dist(zoo_spat)))
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)
moran
moran$vectors
moran = pcnm(distance_matrix)$vectors
distance_matrix = dist(zoo_spat)
rda(zoo_spe.hel ~., data= moran )
class(moran)
as.data.frame(moran)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
class(moran)
rda(zoo_spe.hel ~., data= moran )
anova.cca(moran)
anova.cca(rda(zoo_spe.hel ~., data= moran ) )
anova.cca(rda(zoo_spe.hel ~., data= moran ), by="term" )
rda_spatial = rda(zoo_spe.hel ~., data= moran )
forward.sel(Y = zoo_spe.hel, X = moran , adjR2thresh =  RsquareAdj(rda_spatial)$r.squared, nperm = 49999, alpha = 0.1)
forward.sel(Y = zoo_spe.hel, X = moran , adjR2thresh =  RsquareAdj(rda_spatial)$r.squared, nperm = 49999, alpha = 0.2)
zoo_spat <- zoo_community[c('lat','lon','alt')]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
rda_spatial = rda(zoo_spe.hel ~., data= moran )
rda_spatial
anova.cca(rda_spatial)
zoo_spat <- zoo_community[c('lat','lon')]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
rda_spatial = rda(zoo_spe.hel ~., data= moran )
anova.cca(rda_spatial)
zoo_spat <- zoo_community[c('lat','lon','alt')]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
rda_spatial = rda(zoo_spe.hel ~., data= moran )
anova.cca(rda_spatial)
varpart(zoo_spe.hel, zoo_env.z, moran)
plot(varpart(zoo_spe.hel, zoo_env.z, moran))
informed_vars = zoo_env.z[c("Conductivity", "pH")]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
partitioned = varpart(zoo_spe.hel, zoo_env.z, moran)
plot(partitioned,
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
informed_vars = zoo_env.z[c("Conductivity", "pH")]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
partitioned = varpart(zoo_spe.hel, informed_vars, moran)
plot(partitioned,
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
zoo_spat <- zoo_community[c('lat','lon','alt', 'Depth')]
informed_vars = zoo_env.z[c("Conductivity", "pH")]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
partitioned = varpart(zoo_spe.hel, informed_vars, moran)
plot(partitioned,
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
View(zoo_spat)
anova.cca(partitioned)
anova.cca(rda(zoo_spe.hel, moran))
anova.cca(rda(zoo_spe.hel, moran),alpha = 0.1)
anova.cca(rda(zoo_spe.hel, moran), step = 9999)
anova.cca(rda(zoo_spe.hel, informed_vars,moran), step = 9999)
anova.cca(rda(zoo_spe.hel,moran, informed_vars), step = 9999)
partitioned
RsquareAdj(partitioned)
rda(zoo_spe.hel, moran)
anova.cca(rda(zoo_spe.hel, moran))
anova.cca(rda(zoo_spe.hel, moran), by ="term")
anova.cca(rda(zoo_spe.hel, moran), step = 9999)
anova.cca(rda(zoo_spe.hel, moran), step = 9999, by="term")
anova.cca(rda(zoo_spe.hel, moran), step = 9999, by="axis")
anova.cca(rda(zoo_spe.hel, informed_vars), step = 9999)
anova.cca(rda(zoo_spe.hel, moran), step = 9999)
anova.cca(rda(zoo_spe.hel, informed_vars,moran), step = 9999)
anova.cca(rda(zoo_spe.hel,moran, informed_vars), step = 9999)
setwd('C:\\Users\\rober\\Documents\\GitHub\\Bureau-Biota-Internship') # set working directory
source('utils.R')
library(adespatial)
library(vegan3d)
which_year = "Year 2024"
zoo_yearly <- read.xlsx(xlsxFile = "yearly_data.xlsx", sheet = which_year)
zoo_dataframes <- get_community_data(zoo_yearly, 'Family')
zoo_community <- zoo_dataframes[[1]]
zoo_spe <- zoo_dataframes[[2]]
zoo_env <- zoo_dataframes[[3]]
zoo_spat <- zoo_community[c('lat','lon','alt', 'Depth')]
zoo_env.z <- decostand(zoo_env, method = "standardize")
zoo_spe.hel <- decostand(zoo_spe, "hellinger")
informed_vars = zoo_env.z[c("Conductivity", "pH")]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
partitioned = varpart(zoo_spe.hel, informed_vars, moran)
plot(partitioned,
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
partitioned
anova.cca(rda(zoo_spe.hel, informed_vars), step = 9999)
anova.cca(rda(zoo_spe.hel, moran), step = 9999)
anova.cca(rda(zoo_spe.hel, informed_vars,moran), step = 9999)
anova.cca(rda(zoo_spe.hel,moran, informed_vars), step = 9999)
cristoph_rda = rda(zoo_spe.hel ~ pH + Conductivity + Temperature, data=zoo_env.z)
summary(cristoph_rda)
anova.cca(cristoph_rda, step=9999)
anova.cca(cristoph_rda, step=9999,by="term", )
anova.cca(cristoph_rda, step=9999,by="term" )
anova.cca(cristoph_rda, step=9999,by="axis")
informed_vars = zoo_env.z[c( "pH")]
distance_matrix = dist(zoo_spat)
moran = pcnm(distance_matrix)$vectors %>% as.data.frame()
partitioned = varpart(zoo_spe.hel, informed_vars, moran)
plot(partitioned,
Xnames = c("Chem", "Topo"), # name the partitions
bg = c("seagreen3", "mediumpurple"), alpha = 80, # colour the circles
digits = 2, # only show 2 digits
cex = 1.5)
anova.cca(rda(zoo_spe.hel, informed_vars), step = 9999)
anova.cca(rda(zoo_spe.hel, moran), step = 9999)
anova.cca(rda(zoo_spe.hel, informed_vars,moran), step = 9999)
anova.cca(rda(zoo_spe.hel,moran, informed_vars), step = 9999)
